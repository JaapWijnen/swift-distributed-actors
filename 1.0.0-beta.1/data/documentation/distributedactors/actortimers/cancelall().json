{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/actortimers\/cancelall()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers\/cancelAll()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Cancel all timers currently stored in this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers"},{"type":"text","text":" instance."}],"kind":"symbol","metadata":{"role":"symbol","title":"cancelAll()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:17DistributedActors11ActorTimersC9cancelAllyyF","modules":[{"name":"DistributedActors"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Actor timers cannot participate in structured cancellation, and will be replaced with patterns using swift-async-algorithms (see Timer)"}]}],"references":{"doc://DistributedActors/documentation/DistributedActors/ActorTimers":{"deprecated":true,"role":"symbol","title":"ActorTimers","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorTimers"}],"abstract":[{"type":"text","text":"Creates and manages timers which may only be accessed from the actor that owns it."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorTimers"}],"url":"\/documentation\/distributedactors\/actortimers"},"doc://DistributedActors/documentation/DistributedActors/ActorTimers/cancelAll()":{"role":"symbol","title":"cancelAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Cancel all timers currently stored in this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorTimers\/cancelAll()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/distributedactors\/actortimers\/cancelall()"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"}}}