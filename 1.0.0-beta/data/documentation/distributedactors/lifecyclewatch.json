{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LifecycleWatch"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"DistributedActor","preciseIdentifier":"s:11Distributed0A5ActorP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActorSystem"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","preciseIdentifier":"s:17DistributedActors13ClusterSystemC","text":"ClusterSystem"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/lifecyclewatch"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/DistributedActors\/11Distributed0A5ActorP","doc:\/\/DistributedActors\/SQ","doc:\/\/DistributedActors\/SH","doc:\/\/DistributedActors\/s12IdentifiableP","doc:\/\/DistributedActors\/s8SendableP","doc:\/\/DistributedActors\/12_Concurrency8AnyActorP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/OpLogDistributedReceptionist"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Provides a distributed actor with the ability to “watch” other actors lifecycles."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LifecycleWatch"}],"title":"LifecycleWatch","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:17DistributedActors14LifecycleWatchP","modules":[{"name":"DistributedActors"}],"navigatorTitle":[{"kind":"identifier","text":"LifecycleWatch"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/isWatching(_:)","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/unwatch(_:file:line:)","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/watchTermination(of:whenTerminated:file:line:)"]}],"references":{"doc://DistributedActors/documentation/DistributedActors/OpLogDistributedReceptionist":{"role":"symbol","title":"OpLogDistributedReceptionist","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpLogDistributedReceptionist"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/OpLogDistributedReceptionist","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpLogDistributedReceptionist"}],"url":"\/documentation\/distributedactors\/oplogdistributedreceptionist"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/DistributedActors\/12_Concurrency8AnyActorP"},"doc://DistributedActors/documentation/DistributedActors/LifecycleWatch/unwatch(_:file:line:)":{"role":"symbol","title":"unwatch(_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwatch"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Watchee"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Watchee"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Watchee"}],"abstract":[{"type":"text","text":"Reverts the watching of an previously watched actor."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/unwatch(_:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/lifecyclewatch\/unwatch(_:file:line:)"},"doc://DistributedActors/documentation/DistributedActors/LifecycleWatch/isWatching(_:)":{"role":"symbol","title":"isWatching(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isWatching"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Watchee"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Watchee"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Reverts the watching of an previously watched actor."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/isWatching(_:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/lifecyclewatch\/iswatching(_:)"},"doc://DistributedActors/11Distributed0A5ActorP":{"type":"unresolvable","title":"Distributed.DistributedActor","identifier":"doc:\/\/DistributedActors\/11Distributed0A5ActorP"},"doc://DistributedActors/s12IdentifiableP":{"type":"unresolvable","title":"Swift.Identifiable","identifier":"doc:\/\/DistributedActors\/s12IdentifiableP"},"doc://DistributedActors/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/DistributedActors\/SQ"},"doc://DistributedActors/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/DistributedActors\/SH"},"doc://DistributedActors/documentation/DistributedActors/LifecycleWatch/watchTermination(of:whenTerminated:file:line:)":{"role":"symbol","title":"watchTermination(of:whenTerminated:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"watchTermination"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Watchee"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Watchee"},{"kind":"text","text":", "},{"kind":"externalParam","text":"whenTerminated"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Watchee"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch\/watchTermination(of:whenTerminated:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/lifecyclewatch\/watchtermination(of:whenterminated:file:line:)"},"doc://DistributedActors/documentation/DistributedActors/LifecycleWatch":{"role":"symbol","title":"LifecycleWatch","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LifecycleWatch"}],"abstract":[{"type":"text","text":"Provides a distributed actor with the ability to “watch” other actors lifecycles."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LifecycleWatch"}],"url":"\/documentation\/distributedactors\/lifecyclewatch"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystem":{"role":"symbol","title":"ClusterSystem","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSystem"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":" is a confined space which runs and manages Actors."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSystem"}],"url":"\/documentation\/distributedactors\/clustersystem"},"doc://DistributedActors/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/DistributedActors\/s8SendableP"}}}